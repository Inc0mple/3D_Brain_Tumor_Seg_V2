device:cuda
display_plot:True
net:SwinUNETR(
  (swinViT): SwinTransformer(
    (patch_embed): PatchEmbed(
      (proj): Conv3d(4, 24, kernel_size=(2, 2, 2), stride=(2, 2, 2))
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (layers1): ModuleList(
      (0): BasicLayer(
        (blocks): ModuleList(
          (0): SwinTransformerBlock(
            (norm1): LayerNorm((24,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=24, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=24, out_features=24, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((24,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=24, out_features=96, bias=True)
              (linear2): Linear(in_features=96, out_features=24, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
          (1): SwinTransformerBlock(
            (norm1): LayerNorm((24,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=24, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=24, out_features=24, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((24,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=24, out_features=96, bias=True)
              (linear2): Linear(in_features=96, out_features=24, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
        )
        (downsample): PatchMerging(
          (reduction): Linear(in_features=192, out_features=48, bias=False)
          (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (layers2): ModuleList(
      (0): BasicLayer(
        (blocks): ModuleList(
          (0): SwinTransformerBlock(
            (norm1): LayerNorm((48,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=48, out_features=144, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=48, out_features=48, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((48,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=48, out_features=192, bias=True)
              (linear2): Linear(in_features=192, out_features=48, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
          (1): SwinTransformerBlock(
            (norm1): LayerNorm((48,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=48, out_features=144, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=48, out_features=48, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((48,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=48, out_features=192, bias=True)
              (linear2): Linear(in_features=192, out_features=48, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
        )
        (downsample): PatchMerging(
          (reduction): Linear(in_features=384, out_features=96, bias=False)
          (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (layers3): ModuleList(
      (0): BasicLayer(
        (blocks): ModuleList(
          (0): SwinTransformerBlock(
            (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=96, out_features=288, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=96, out_features=96, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=96, out_features=384, bias=True)
              (linear2): Linear(in_features=384, out_features=96, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
          (1): SwinTransformerBlock(
            (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=96, out_features=288, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=96, out_features=96, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=96, out_features=384, bias=True)
              (linear2): Linear(in_features=384, out_features=96, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
        )
        (downsample): PatchMerging(
          (reduction): Linear(in_features=768, out_features=192, bias=False)
          (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (layers4): ModuleList(
      (0): BasicLayer(
        (blocks): ModuleList(
          (0): SwinTransformerBlock(
            (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=192, out_features=576, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=192, out_features=192, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=192, out_features=768, bias=True)
              (linear2): Linear(in_features=768, out_features=192, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
          (1): SwinTransformerBlock(
            (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
            (attn): WindowAttention(
              (qkv): Linear(in_features=192, out_features=576, bias=True)
              (attn_drop): Dropout(p=0.0, inplace=False)
              (proj): Linear(in_features=192, out_features=192, bias=True)
              (proj_drop): Dropout(p=0.0, inplace=False)
              (softmax): Softmax(dim=-1)
            )
            (drop_path): Identity()
            (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
            (mlp): MLPBlock(
              (linear1): Linear(in_features=192, out_features=768, bias=True)
              (linear2): Linear(in_features=768, out_features=192, bias=True)
              (fn): GELU(approximate='none')
              (drop1): Dropout(p=0.0, inplace=False)
              (drop2): Dropout(p=0.0, inplace=False)
            )
          )
        )
        (downsample): PatchMerging(
          (reduction): Linear(in_features=1536, out_features=384, bias=False)
          (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
  )
  (encoder1): UnetrBasicBlock(
    (layer): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(4, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (conv3): Convolution(
        (conv): Conv3d(4, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (norm3): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (encoder2): UnetrBasicBlock(
    (layer): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (encoder3): UnetrBasicBlock(
    (layer): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(48, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(48, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (encoder4): UnetrBasicBlock(
    (layer): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (encoder10): UnetrBasicBlock(
    (layer): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (decoder5): UnetrUpBlock(
    (transp_conv): Convolution(
      (conv): ConvTranspose3d(384, 192, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    )
    (conv_block): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(384, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(192, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(192, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (conv3): Convolution(
        (conv): Conv3d(384, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (norm3): InstanceNorm3d(192, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (decoder4): UnetrUpBlock(
    (transp_conv): Convolution(
      (conv): ConvTranspose3d(192, 96, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    )
    (conv_block): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(192, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (conv3): Convolution(
        (conv): Conv3d(192, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (norm3): InstanceNorm3d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (decoder3): UnetrUpBlock(
    (transp_conv): Convolution(
      (conv): ConvTranspose3d(96, 48, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    )
    (conv_block): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(96, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(48, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (conv3): Convolution(
        (conv): Conv3d(96, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (norm3): InstanceNorm3d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (decoder2): UnetrUpBlock(
    (transp_conv): Convolution(
      (conv): ConvTranspose3d(48, 24, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    )
    (conv_block): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(48, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (conv3): Convolution(
        (conv): Conv3d(48, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (norm3): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (decoder1): UnetrUpBlock(
    (transp_conv): Convolution(
      (conv): ConvTranspose3d(24, 24, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    )
    (conv_block): UnetResBlock(
      (conv1): Convolution(
        (conv): Conv3d(48, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (conv2): Convolution(
        (conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
      (norm1): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (norm2): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (conv3): Convolution(
        (conv): Conv3d(48, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (norm3): InstanceNorm3d(24, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
  )
  (out): UnetOutBlock(
    (conv): Convolution(
      (conv): Conv3d(24, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    )
  )
)
criterion:BCEDiceLoss(
  (bce): BCEWithLogitsLoss()
  (dice): DiceLoss()
)
optimizer:Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    lr: 5.000000000000002e-09
    maximize: False
    weight_decay: 0
)
scheduler:<torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f58a60bb340>
accumulation_steps:4
phases:['train', 'val']
num_epochs:50
dataloaders:{'train': <torch.utils.data.dataloader.DataLoader object at 0x7f58b7ac7520>, 'val': <torch.utils.data.dataloader.DataLoader object at 0x7f58b7ac7d00>, 'test': <torch.utils.data.dataloader.DataLoader object at 0x7f58b7ac76d0>}
best_loss:0.178503210955071
losses:{'train': [1.3959242119082027, 1.1501526449569732, 1.0087509456696166, 0.8954176429106708, 0.7797525834447984, 0.6599780759657291, 0.5358739752506575, 0.4400594053159648, 0.378838197133387, 0.3267095130885962, 0.2811217968114882, 0.2560927163342106, 0.24015324435306593, 0.23212200836650318, 0.22438191885957245, 0.2057204911124117, 0.20066904202953492, 0.19206813153431895, 0.18837582934718622, 0.1922560344970725, 0.18800057660604158, 0.17315433242361808, 0.16542809363100466, 0.1636379652660156, 0.1624750642835414, 0.1602467727695128, 0.15898462144140962, 0.1583766724786831, 0.15705438476664937, 0.1562389876452689, 0.15504401718255684, 0.15391424550416352, 0.1535373174164005, 0.15263351765478972, 0.15200981931201404, 0.1504750434210092, 0.14894121769149948, 0.14863967082459664, 0.14863209194103574, 0.14847867520873084, 0.14829012750162823, 0.1482161358848724, 0.14796438028490588, 0.1479543800759678, 0.14795353306110368, 0.14791871295682377, 0.14791812376604335, 0.14791780103975377, 0.14791433008904692, 0.14791437368769156], 'val': [1.2536092524258595, 1.0713438436670124, 0.9514651692138528, 0.835466038505986, 0.7117438260114418, 0.5909800079633605, 0.4773922680683856, 0.4003193696152489, 0.34350484525257685, 0.2982938761981028, 0.2726159168864196, 0.24890830789534552, 0.2762187547841162, 0.23501014484549468, 0.23635284996257638, 0.21404408480761186, 0.2055786836822078, 0.2026432919895874, 0.20998258916836865, 0.2115516610584169, 0.21068178145390637, 0.1886666425556507, 0.18440579074733662, 0.18883459171596564, 0.18344192825398356, 0.18454746297507915, 0.1820790188492469, 0.18548091978959316, 0.1805824340795571, 0.17956526029222417, 0.1844945212580123, 0.17931800476222667, 0.1789878213180686, 0.1790081535307866, 0.17948817728825336, 0.1810751457540494, 0.17949953450346892, 0.17858705374429812, 0.178503210955071, 0.1787676951795254, 0.18017419610383376, 0.1792513019633743, 0.17929872265964183, 0.17925040311408494, 0.17923719942007424, 0.17923254575931802, 0.17923072992630726, 0.1792220040312353, 0.17922267092848723, 0.17922271703774073]}
dice_scores:{'train': [0.53970987, 0.65017587, 0.66936827, 0.6960604, 0.7236517, 0.7558564, 0.78691244, 0.8019502, 0.8015919, 0.81472117, 0.83388704, 0.83826923, 0.83840823, 0.8367191, 0.83723813, 0.84804446, 0.8481321, 0.85277915, 0.8529107, 0.84671456, 0.849031, 0.861087, 0.8680558, 0.86944973, 0.87033296, 0.872333, 0.8734111, 0.8737251, 0.87468857, 0.87544835, 0.8764595, 0.87721014, 0.87741596, 0.87806696, 0.8783292, 0.8796221, 0.88092875, 0.881188, 0.88118994, 0.88134223, 0.881511, 0.8815659, 0.88178974, 0.8817998, 0.88179606, 0.8818293, 0.8818305, 0.8818308, 0.8818342, 0.8818338], 'val': [0.67310137, 0.72915953, 0.7189774, 0.75921214, 0.7823076, 0.797543, 0.79133165, 0.79296416, 0.807646, 0.8167504, 0.8307397, 0.8298972, 0.79440504, 0.8285393, 0.8202712, 0.83347327, 0.83772135, 0.838225, 0.827601, 0.8269738, 0.82397324, 0.8436106, 0.8476213, 0.8430391, 0.8479752, 0.8467933, 0.84876436, 0.8455294, 0.85003865, 0.85099727, 0.8459573, 0.85067534, 0.85083455, 0.8505915, 0.85004944, 0.84832513, 0.8497863, 0.85065144, 0.8507232, 0.8504792, 0.84909517, 0.8499554, 0.84990185, 0.849949, 0.84995836, 0.84996176, 0.8499623, 0.84997153, 0.8499711, 0.8499715]}
jaccard_scores:{'train': [0.40044713, 0.50490797, 0.5285262, 0.55876756, 0.5913789, 0.627683, 0.66718477, 0.6840567, 0.6841016, 0.6998883, 0.7243092, 0.72975594, 0.731064, 0.72823596, 0.7280714, 0.7437016, 0.7434102, 0.7496468, 0.75042695, 0.74289775, 0.74511474, 0.7622906, 0.77210563, 0.774285, 0.77552897, 0.7785318, 0.78012466, 0.78058493, 0.7820121, 0.78309906, 0.7845944, 0.78583807, 0.786054, 0.7870566, 0.78748524, 0.7894228, 0.7913498, 0.7917656, 0.79175264, 0.79199034, 0.792226, 0.792319, 0.79265547, 0.7926701, 0.79266727, 0.79271406, 0.79271567, 0.79271597, 0.792721, 0.7927202], 'val': [0.52434313, 0.59069204, 0.5798871, 0.62735546, 0.6575595, 0.67727095, 0.67191565, 0.67624176, 0.68848544, 0.7038976, 0.71910554, 0.7202315, 0.67197233, 0.71739405, 0.7052926, 0.72661006, 0.72976255, 0.7299575, 0.71518385, 0.7170387, 0.7114987, 0.7380499, 0.74389887, 0.7372572, 0.74431586, 0.74262714, 0.7455098, 0.74090475, 0.74732417, 0.7487937, 0.74167943, 0.7483157, 0.748564, 0.74832094, 0.7476173, 0.745238, 0.7472493, 0.7484482, 0.74854666, 0.74820113, 0.746271, 0.747476, 0.74740094, 0.74746716, 0.74748087, 0.74748605, 0.7474864, 0.7474995, 0.747499, 0.74749935]}
last_completed_run_time:15:14:58.148519
parameter_count:15639711
